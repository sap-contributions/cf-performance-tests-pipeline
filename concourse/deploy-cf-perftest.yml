resource_types:

- name: slack-alert
  type: docker-image
  source:
    repository: arbourd/concourse-slack-alert-resource

resources:
  - name: cf-deployment-concourse-tasks
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment-concourse-tasks.git
  - name: perf-test-repo
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
      username: ((cf-perf-github-username))
      password: ((cf-perf-github-user-token))
      branch: ((results-branch))
  - name: bbl-state-file
    type: s3
    source:
      region_name: eu-central-1
      bucket: ((bbl-state-bucket-name))
      versioned_file: bbl-state.tar.gz
      initial_version: "0"
      access_key_id: ((bbl-state-bucket-access-key-id))
      secret_access_key: ((bbl-state-bucket-access-key-secret))
  - name: cf-deployment
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-deployment.git
      branch: main
  - name: ops-files
    type: git
    source:
      branch: main
      uri: https://github.com/cloudfoundry/cf-performance-tests-pipeline.git
      username: ((cf-perf-github-username))
      password: ((cf-perf-github-user-token))
  - name: vars-files
    type: s3
    source:
      region_name: eu-central-1
      bucket: ((bbl-state-bucket-name))
      versioned_file: artifactory-credentials.yml
      access_key_id: ((bbl-state-bucket-access-key-id))
      secret_access_key: ((bbl-state-bucket-access-key-secret))
  - name: cf-performance-tests
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-performance-tests.git
      branch: CFP-1806
  - name: cf-acceptance-tests
    type: git
    source:
      uri: https://github.com/cloudfoundry/cf-acceptance-tests.git
  - name: integration-config
    type: s3
    source:
      region_name: eu-central-1
      bucket: ((bbl-state-bucket-name))
      versioned_file: integration_config.json
      access_key_id: ((bbl-state-bucket-access-key-id))
      secret_access_key: ((bbl-state-bucket-access-key-secret))
  - name: lb-certificate
    type: s3
    source:
      region_name: eu-central-1
      bucket: ((bbl-state-bucket-name))
      versioned_file: lb_certificate.tar.gz
      access_key_id: ((bbl-state-bucket-access-key-id))
      secret_access_key: ((bbl-state-bucket-access-key-secret))
  - name: slack-notification
    type: slack-alert
    source:
      url: ((cf-perf-slack-notification-url))

jobs:
  - name: set-pipeline
    serial: true
    plan:
      - get: perf-test-repo
        trigger: true
      - set_pipeline: self
        file: perf-test-repo/concourse/deploy-cf-perftest.yml
        var_files:
          - perf-test-repo/variables/vars-((env_name))-perf-common.yml
  - name: bbl-up
    serial: true
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: perf-test-repo
        - get: lb-certificate
          params:
            unpack: true
        - get: bbl-state-file
          params:
            unpack: true
      - in_parallel:
        - load_var: lb_cert_pem
          file: lb-certificate/lb_certificate/cert.pem
        - load_var: lb_cert_key
          file: lb-certificate/lb_certificate/key.pem
      - task: bbl-up
        file: cf-deployment-concourse-tasks/bbl-up/task.yml
        input_mapping:
          bbl-config: perf-test-repo
          bbl-state: bbl-state-file
        params:
          BBL_IAAS: aws
          BBL_AWS_ACCESS_KEY_ID: ((aws-access-key-id))
          BBL_AWS_SECRET_ACCESS_KEY: ((aws-access-key-secret))
          BBL_AWS_REGION: eu-central-1
          BBL_STATE_DIR: state
          BBL_CONFIG_DIR: bbl-patches
          BBL_LB_CERT: ((.:lb_cert_pem))
          BBL_LB_KEY: ((.:lb_cert_key))
          LB_DOMAIN: ((system-domain))
          SKIP_LB_CREATION: false
          DEBUG_MODE: false
          STORE_BBL_STATE_AS_TARBALL: true
          DELETE_TERRAFORM_PLUGINS: true
        on_failure:
          put: slack-notification
          params:
            alert_type: failed
        ensure:
          put: bbl-state-file
          params:
            file: updated-bbl-state/bbl-state.tgz

  - name: bosh-deploy
    serial: true
    serial_groups: [bosh-deploy-run-performance-tests]
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state-file
          params:
            unpack: true
          passed:
            - bbl-up
          trigger: true
        - get: cf-deployment
          trigger: true
        - get: ops-files
        - get: vars-files
      - task: bosh-deploy
        file: cf-deployment-concourse-tasks/bosh-deploy/task.yml
        input_mapping:
          bbl-state: bbl-state-file
        params:
          BBL_STATE_DIR: state
          MANIFEST_FILE: cf-deployment.yml
          SYSTEM_DOMAIN: ((system-domain))
          OPS_FILES: "operations/use-bionic-stemcell.yml((additional-ops-files)) operations/scale-up-vms.yml operations/speed-up-dynamic-asgs.yml"
          VARS_FILES: "artifactory-credentials.yml"
        on_failure:
          put: slack-notification
          params:
            alert_type: failed

  - name: bosh-clean-up
    serial: true
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state-file
          params:
            unpack: true
        - get: cf-deployment
          passed:
            - bosh-deploy
          trigger: true
      - task: bosh-clean-up
        file: cf-deployment-concourse-tasks/bosh-cleanup/task.yml
        input_mapping:
          bbl-state: bbl-state-file
        params:
          BBL_STATE_DIR: state

  - name: run-performance-tests
    serial: true
    serial_groups: [bosh-deploy-run-performance-tests]
    plan:
      - in_parallel:
        - get: perf-test-repo
        - get: bbl-state-file
          params:
            unpack: true
          passed:
            - bosh-deploy
          trigger: true
        - get: cf-deployment
          passed:
            - bosh-deploy
          trigger: true
      - get: cf-performance-tests
      - task: run-performance-tests
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: cloudfoundry/cf-deployment-concourse-tasks
            version:
              digest: sha256:e5a5877fa88caa76b3f8dafe7d15111b295a97506780dfe16cbf1e05a3e4fbad
          inputs:
            - name: perf-test-repo
            - name: cf-performance-tests
            - name: bbl-state-file
            - name: cf-deployment
          run:
            path: perf-test-repo/concourse/run-performance-tests
          params:
            GIT_COMMIT_EMAIL: "((cf-perf-github-user-email))"
            GIT_COMMIT_USERNAME: "((cf-perf-github-username))"
            GIT_COMMIT_MESSAGE: "Performance tests results"
            TEST_RESULTS_FOLDER: "perf-test-repo/((test-results-folder))"
            TEST_SUITE_FOLDER: "((test-suite-folder))"
            DATABASE_TYPE: "((database-type))"
          outputs:
            - name: performance-test-results
        on_failure:
          put: slack-notification
          params:
            alert_type: failed
      - put: perf-test-repo
        params:
          repository: performance-test-results
          rebase: true

  - name: generate-chart
    serial: true
    plan:
      - get: perf-test-repo
        trigger: true
        passed:
          - run-performance-tests
      - task: generate-chart
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: python
          inputs:
            - name: perf-test-repo
          run:
            path: perf-test-repo/concourse/generate-chart
          params:
            GIT_COMMIT_EMAIL: "((cf-perf-github-user-email))"
            GIT_COMMIT_USERNAME: "((cf-perf-github-username))"
            GIT_COMMIT_MESSAGE: "Generated Chart"
            TEST_RESULTS_FOLDER: "perf-test-repo/((test-results-folder))"
            GENERATED_CHARTS_FOLDER: "perf-test-repo/((generated-charts-folder))"
          outputs:
            - name: generated-chart-output
        on_failure:
          put: slack-notification
          params:
            alert_type: failed
      - put: perf-test-repo
        params:
          repository: generated-chart-output
          rebase: true

  - name: cf-acceptance-test
    serial: true
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: cf-acceptance-tests
        - get: integration-config
        - get: perf-test-repo
          trigger: true
          passed:
            - generate-chart
      - task: cf-acceptance-test
        file: cf-deployment-concourse-tasks/run-cats/task.yml
        params:
          NODES: 1
        on_failure:
          put: slack-notification
          params:
            alert_type: failed
        on_success:
          put: slack-notification
          params:
            alert_type: success

  - name: bosh-delete-cf-deployment
    serial: true
    serial_groups: [bosh-deploy-run-performance-tests]
    plan:
      - in_parallel:
        - get: cf-deployment-concourse-tasks
        - get: bbl-state-file
          params:
            unpack: true
        - get: perf-test-repo
          trigger: true
          passed:
            - cf-acceptance-test
      - task: bosh-delete-deployments
        file: cf-deployment-concourse-tasks/bosh-delete-deployment/task.yml
        input_mapping:
          bbl-state: bbl-state-file
        params:
          BBL_STATE_DIR: state
        on_failure:
          put: slack-notification
          params:
            alert_type: failed
        on_success:
          put: slack-notification
          params:
            alert_type: success
