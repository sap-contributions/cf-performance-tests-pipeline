- type: replace
  path: /releases/-
  value:
    name: "haproxy"
    version: "11.8.1"
    url: "https://bosh.io/d/github.com/cloudfoundry-community/haproxy-boshrelease?v=11.8.1"
    sha1: "80c160b8c91cc9bd3d50dd2e9b2a32b247e49b5d"
- type: replace
  path: /releases/-
  value:
    name: go-cf-api
    version: 0.1.3
    url: https://github.com/cloudfoundry/go-cf-api-release/releases/download/v0.1.3/go-cf-api-boshrelease-0.1.3.tgz
    sha1: 14bef36e62a9f961c601c8559d2378e9aa6765d6
- type: replace
  path: /instance_groups/-
  value:
    name: cc-api
    stemcell: default
    vm_type: small
    networks:
      - name: default
    azs:
      - z1
      - z2
    instances: 1
    jobs:
      - name: go-cf-api
        release: go-cf-api
        consumes:
          cloud_controller_db:
            from: cloud_controller_db
        properties:
          name: go-cf-api
          build: custom
          version: 0
          support_address: help@sap.com
          description: go-cf-api at SAP BTP
          db:
            max_connections: 20
            min_connections: 10
          uaa:
            internal_url: uaa.service.cf.internal
            tls_port: 8443
            ca_cert: |
              ((uaa_ssl.ca))
      - name: haproxy
        release: haproxy
        # Block implicit links
        consumes:
          http_backend: nil
          tcp_backend: nil
          tcp_router: nil
        properties:
          ha_proxy:
            disable_http: true
            ssl_pem:
              - private_key: |
                  ((cc_public_tls.private_key))
                cert_chain: |
                  ((cc_public_tls.certificate))
                  ((cc_public_tls.ca))
            backend_servers:
              - cloud-controller-ng.service.cf.internal
            backend_port: 9024
            backend_ssl: verify
            backend_ca_file:
              ((cc_public_tls.ca))
            backend_config: http-response set-header Server haproxy
            resolvers:
              - bosh_dns: 169.254.0.2
            routed_backend_servers:
              "/v3/info":
                servers: [127.0.0.1]
                port: 8282
              "/v3/buildpacks/":
                additional_acls: [method GET]
                servers: [127.0.0.1]
                port: 8282
              "/v3/buildpacks":
                additional_acls:
                - method GET POST
                - path_end /v3/buildpacks
                servers: [127.0.0.1]
                port: 8282
              "/v3/security_groups":
                additional_acls: [method GET]
                servers: [127.0.0.1]
                port: 8282
              "/docs":
                servers: [127.0.0.1]
                port: 8282
              "/healthz":
                servers: [127.0.0.1]
                port: 8282
      - name: route_registrar
        release: routing
        properties:
          nats:
            tls:
              client_cert: ((nats_client_cert.certificate))
              client_key: ((nats_client_cert.private_key))
              enabled: true
          route_registrar:
            routes:
              - health_check:
                  name: cc-api-health-check
                  script_path: "/var/vcap/jobs/go-cf-api/bin/route-registrar-health-check.sh"
                  timeout: 6s
                name: api
                tls_port: 443
                registration_interval: 10s
                server_cert_domain_san: api.((system_domain))
                tags:
                  component: CloudController
                uris:
                  - api.((system_domain))/v3/info
                  - api.((system_domain))/v3/buildpacks
                  - api.((system_domain))/v3/security_groups
                  - api.((system_domain))/docs
